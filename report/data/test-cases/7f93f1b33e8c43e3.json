{"uid":"7f93f1b33e8c43e3","name":"test_login[params1-check1]","fullName":"testcase.login#test_login","historyId":"2866b672a1604944755e435539a7281d","time":{"start":1663332683387,"stop":1663332684356,"duration":969},"description":"测试登录功能，两个正例测试","descriptionHtml":"<p>测试登录功能，两个正例测试</p>\n","status":"failed","statusMessage":"AssertionError: assert 120003 == 1","statusTrace":"params = {'countryPhoneCode': '2', 'password': '6d9597d054fab29693d255612e67bd6c', 'phone': '2565555556'}\ncheck = {'code': 1}\n\n    @allure.feature(\"登录模块\")\n    @allure.description(\"测试登录功能，两个正例测试\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\"params,check\", list)\n    def test_login(params,check):\n    \t# pams=pam1[\"pam\"]\n        #  print(pam1)\n    \tlogger1.logger.info(\"当前url:\" + url1)\n    \tprint(params)\n    \tlogger1.logger.info(\"当前的测试参数\"+str(params))\n    \t# logger.info(\"当前url:\" + url1)\n    \t# print(params)\n    \t# logger.info(\"当前的测试参数\"+str(params))\n    \t# print(pams)\n    \tr1=request1.request(url1,headers=header,json=params,http_method=\"post\",timeout=5,verify=False)\n    \tprint(r1)\n>   \tassert r1[\"body\"][\"code\"]==1\nE    assert 120003 == 1\n\ntestcase/login.py:58: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"测试登录功能，两个正例测试","status":"failed","statusMessage":"AssertionError: assert 120003 == 1","statusTrace":"params = {'countryPhoneCode': '2', 'password': '6d9597d054fab29693d255612e67bd6c', 'phone': '2565555556'}\ncheck = {'code': 1}\n\n    @allure.feature(\"登录模块\")\n    @allure.description(\"测试登录功能，两个正例测试\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\"params,check\", list)\n    def test_login(params,check):\n    \t# pams=pam1[\"pam\"]\n        #  print(pam1)\n    \tlogger1.logger.info(\"当前url:\" + url1)\n    \tprint(params)\n    \tlogger1.logger.info(\"当前的测试参数\"+str(params))\n    \t# logger.info(\"当前url:\" + url1)\n    \t# print(params)\n    \t# logger.info(\"当前的测试参数\"+str(params))\n    \t# print(pams)\n    \tr1=request1.request(url1,headers=header,json=params,http_method=\"post\",timeout=5,verify=False)\n    \tprint(r1)\n>   \tassert r1[\"body\"][\"code\"]==1\nE    assert 120003 == 1\n\ntestcase/login.py:58: AssertionError","steps":[],"attachments":[{"uid":"77af68c02fabf8fa","name":"log","source":"77af68c02fabf8fa.txt","type":"text/plain","size":229}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"登录模块"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"login"},{"name":"host","value":"yanchenghaos-MacBook-Air.local"},{"name":"thread","value":"32038-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"check","value":"{'code': 1}"},{"name":"params","value":"{'countryPhoneCode': '2', 'password': '6d9597d054fab29693d255612e67bd6c', 'phone': '2565555556'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7f93f1b33e8c43e3.json","parameterValues":["{'code': 1}","{'countryPhoneCode': '2', 'password': '6d9597d054fab29693d255612e67bd6c', 'phone': '2565555556'}"]}